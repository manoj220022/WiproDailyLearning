package com.example.wipro.controllers;

import com.example.wipro.entities.User;
import com.example.wipro.services.UserService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/v1/users")
@RequiredArgsConstructor
public class UserController {

    private final UserService userService;

    @GetMapping
    public ResponseEntity<List<User>> getAllUsers() {
        return ResponseEntity.ok(userService.getAllUsers());
    }

    @GetMapping("/{id}")
    public ResponseEntity<User> getUserById(@PathVariable Long id) {
        return ResponseEntity.ok(userService.getUserById(id));
    }

    @PostMapping
    public ResponseEntity<User> createUser(@RequestBody User user) {
        return ResponseEntity.ok(userService.createUser(user));
    }

    @PutMapping("/{id}")
    public ResponseEntity<User> updateUser(@PathVariable Long id, @RequestBody User user) {
        return ResponseEntity.ok(userService.updateUser(id, user));
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteUser(@PathVariable Long id) {
        userService.deleteUser(id);
        return ResponseEntity.noContent().build();
    }

   
    @GetMapping("/properties")
    public ResponseEntity<List<Map<String, Object>>> getAllProperties() {
        return ResponseEntity.ok(userService.fetchAllProperties());
    }

    @GetMapping("/properties/{propertyId}")
    public ResponseEntity<Map<String, Object>> getPropertyById(@PathVariable Long propertyId) {
        return ResponseEntity.ok(userService.fetchPropertyById(propertyId));
    }
}
